{"ast":null,"code":"var _jsxFileName = \"/Users/codex/Desktop/bootcamp/Bootcamp_coding/HoneyDoo/client/src/components/AlertBar.js\";\nimport React, { useEffect } from 'react';\nimport { useStoreContext } from \"../utils/GlobalStore\";\nlet timeout;\n\nfunction AlertBar() {\n  const [{\n    alert\n  }, dispatch] = useStoreContext();\n\n  function clearAlert() {\n    // if user clicked on the box, then timeout may still exist, so clear it\n    if (timeout) clearTimeout(timeout);\n    dispatch({\n      type: \"ALERT_CLEAR\"\n    });\n  }\n\n  useEffect(function () {\n    if (alert) {\n      // monitor alert variable, if it is set, we trigger a 3s timer to clear it\n      // (debounce an previous pending clears)\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      timeout = setTimeout(clearAlert, 3000);\n    }\n  }, [alert]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, alert && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: clearAlert,\n    class: \"navbar fixed-top alert alert-warning mx-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }\n  }, alert));\n}\n\nexport default AlertBar;","map":{"version":3,"sources":["/Users/codex/Desktop/bootcamp/Bootcamp_coding/HoneyDoo/client/src/components/AlertBar.js"],"names":["React","useEffect","useStoreContext","timeout","AlertBar","alert","dispatch","clearAlert","clearTimeout","type","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AAEA,IAAIC,OAAJ;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBJ,eAAe,EAA7C;;AAEA,WAASK,UAAT,GAAqB;AACnB;AACA,QAAIJ,OAAJ,EAAcK,YAAY,CAAEL,OAAF,CAAZ;AAEdG,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD;;AAEDR,EAAAA,SAAS,CAAE,YAAU;AACnB,QAAII,KAAJ,EAAW;AACT;AACA;AACA,UAAIF,OAAJ,EAAa;AACXK,QAAAA,YAAY,CAAEL,OAAF,CAAZ;AACD;;AACDA,MAAAA,OAAO,GAAGO,UAAU,CAAEH,UAAF,EAAc,IAAd,CAApB;AACD;AACF,GATQ,EASN,CAAEF,KAAF,CATM,CAAT;AAWA,sBACE,0CACIA,KAAK,iBAAI;AAAK,IAAA,OAAO,EAAEE,UAAd;AAA0B,IAAA,KAAK,EAAC,2CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6EF,KAA7E,CADb,CADF;AAKD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useStoreContext } from \"../utils/GlobalStore\"\n\nlet timeout\n\nfunction AlertBar() {\n  const [{ alert }, dispatch ]= useStoreContext()\n\n  function clearAlert(){\n    // if user clicked on the box, then timeout may still exist, so clear it\n    if( timeout ) clearTimeout( timeout )\n\n    dispatch({ type: \"ALERT_CLEAR\" })\n  }\n\n  useEffect( function(){\n    if( alert ){\n      // monitor alert variable, if it is set, we trigger a 3s timer to clear it\n      // (debounce an previous pending clears)\n      if( timeout ){\n        clearTimeout( timeout )\n      }\n      timeout = setTimeout( clearAlert, 3000 )\n    }\n  }, [ alert ])\n  \n  return ( \n    <>\n      { alert && <div onClick={clearAlert} class=\"navbar fixed-top alert alert-warning mx-5\">{alert}</div> }\n    </>\n  )\n}\n\nexport default AlertBar"]},"metadata":{},"sourceType":"module"}