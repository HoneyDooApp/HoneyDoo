{"ast":null,"code":"var _jsxFileName = \"/Users/codex/Desktop/bootcamp/Bootcamp_coding/HoneyDoo/client/src/pages/Tasks.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useStoreContext } from \"../utils/GlobalStore\";\nimport fetchJSON from \"../utils/API\";\n\nfunction Tasks() {\n  const [{\n    alert,\n    tasks,\n    name\n  }, dispatch] = useStoreContext();\n  const inputRef = useRef();\n\n  async function tasksLoad() {\n    const {\n      status,\n      tasks: newTasks,\n      message\n    } = await fetchJSON('/api/tasks');\n\n    if (!status) {\n      // for simplicity, we simply log user out if an error (ex. forbidden for invalid session)\n      dispatch({\n        type: \"USER_LOGOUT\",\n        message\n      });\n      return;\n    } // update tasks list\n\n\n    console.log(`.. GET /api/tasks, tasks:`, newTasks);\n    dispatch({\n      type: \"UPDATE_TASKS\",\n      tasks: newTasks\n    });\n  }\n\n  async function tasksSave(e) {\n    e.preventDefault();\n    const newTask = inputRef.current.value; // clear input\n\n    inputRef.current.value = '';\n    const {\n      status,\n      tasks: newTasks,\n      message\n    } = await fetchJSON('/api/tasks', 'post', {\n      task: newTask\n    });\n\n    if (!status) {\n      dispatch({\n        type: \"ALERT_MESSAGE\",\n        message\n      });\n      return;\n    }\n\n    dispatch({\n      type: \"UPDATE_TASKS\",\n      tasks: newTasks,\n      message\n    });\n  } // on load get the list\n\n\n  useEffect(function () {\n    tasksLoad();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, name, \"'s Task List\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"taskList\",\n    class: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, tasks && tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task._id,\n    class: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 44\n    }\n  }, task.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"New Task...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: tasksSave,\n    disabled: alert.length > 0,\n    class: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Save\")))));\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/codex/Desktop/bootcamp/Bootcamp_coding/HoneyDoo/client/src/pages/Tasks.js"],"names":["React","useEffect","useRef","useStoreContext","fetchJSON","Tasks","alert","tasks","name","dispatch","inputRef","tasksLoad","status","newTasks","message","type","console","log","tasksSave","e","preventDefault","newTask","current","value","task","map","_id","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\"\nimport { useStoreContext } from \"../utils/GlobalStore\"\nimport fetchJSON from \"../utils/API\"\n\nfunction Tasks() {\n  const [{ alert, tasks, name }, dispatch ]= useStoreContext()\n\n  const inputRef = useRef()\n\n  async function tasksLoad(){\n    const { status, tasks: newTasks, message }= await fetchJSON( '/api/tasks' )\n    if( !status ){\n      // for simplicity, we simply log user out if an error (ex. forbidden for invalid session)\n      dispatch({ type: \"USER_LOGOUT\", message })\n      return\n    }\n\n    // update tasks list\n    console.log( `.. GET /api/tasks, tasks:`, newTasks )\n    dispatch({ type: \"UPDATE_TASKS\", tasks: newTasks })\n  }\n\n  async function tasksSave( e ){\n    e.preventDefault()\n    \n    const newTask = inputRef.current.value\n    // clear input\n    inputRef.current.value = ''\n\n    const { status, tasks: newTasks, message }= await fetchJSON( '/api/tasks', 'post', { task: newTask } )\n    if( !status ){\n      dispatch({ type: \"ALERT_MESSAGE\", message })\n      return\n    }\n\n    dispatch({ type: \"UPDATE_TASKS\", tasks: newTasks, message })\n  }\n\n  // on load get the list\n  useEffect( function(){\n    tasksLoad()\n  }, [])\n  \n  return (\n      <form>\n      <div class=\"card\">\n          <div class=\"card-header\">\n              <h1>{name}'s Task List</h1>\n          </div>\n          <div  class=\"card-body\">\n              <ul id=\"taskList\" class=\"list-group\">\n                {tasks && tasks.map( task=><li key={task._id} class=\"list-group-item\">{task.name}</li> )}\n              </ul>\n          </div>\n\n          <div class=\"card-footer\">\n            <div class=\"input-group\">\n              <input ref={inputRef} type=\"text\" class=\"form-control\" placeholder='New Task...' /> \n              <button onClick={tasksSave} disabled={alert.length>0} class=\"btn btn-primary\">Save</button>\n            </div>\n          </div>\n      </div>\n      </form>\n  )\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}